(name 'SandstoneDb-RamonLeon.151' message 'Version bump for instructions...For Pharo1.4, load SandstoneDb, SandstoneDbTests, SandstoneDbFileDirectoryStore, and optionally SandstondDbFuel in this order.For Pharo2, load SandstoneDb, SandstoneDbTests, SandstoneDbFileSystemStore, and SandstondDbFuel (required) in this order.' id '4fd4dc8c-fe68-4314-a736-ccc5760bd1b3' date '28 April 2013' time '11:57:37.286 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.150' message 'removed some extentions from the core package that belong in the filedirectory store package for pharo1.4' id 'a96677ff-e726-44a8-8909-b776f63508da' date '28 April 2013' time '11:30:44 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.149' message 'Broke file store into its own package because it relies on FileDirectory which apparently no longer exists in Pharo2.  Use that package with Pharo1.4 and the new FileSystem store package for Pharo2.' id '934129cf-475b-47ea-a961-f16b122da63a' date '28 April 2013' time '11:09:19 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.148' message 'abstract store shouldn''t swallow load errors silently' id '399379eb-7f26-4b5e-9d57-9724d9a5d6ce' date '9 October 2012' time '9:18:39 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-pre.147' message 'Fixed small bug in the SDMemoryStore, which caused findAll to return Instances of all ActiveRecord classes after warmUp' id 'a35de9d2-2ffd-4a2e-8b66-567cc7feb242' date '12 June 2012' time '3:05:51 pm' author 'pre' ancestors ((name 'SandstoneDb-RamonLeon.146' message 'Give a cleaner error when someone attempts to save blocks or contexts so they know it''s not a bug but a misuse of the library.' id 'bb4006d7-6ee0-45b9-abb4-f6741a246603' date '9 September 2011' time '2:41:46 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.145' message 'Add an onLoad event to the lifecycle.' id 'a7f8be1c-3392-4efb-b690-c43310e4b2f2' date '9 September 2011' time '2:36:13 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.144' message 'Fix bug found by David Zmick where an object found in the serialized graph multiple times, in this case, as dictionary keys, failed to deepCopy itself correctly resulting in nill being saved instead of the object.All tests pass.' id '26fc513a-4e38-4821-b57d-5468ac431b93' date '29 June 2011' time '9:04:13 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.143' message 'Broke the Fuel serialization stuff into its own package so there''s no dependency on it for those on unsupported platforms or older images.' id 'b2bb04da-135e-485d-98e6-44a36406229d' date '31 May 2011' time '11:39:12 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.142' message 'Remove stupid offset hack fix, rather just hack DateAndTime accessor in my image till I figure out what''s causing the issue.' id '49cd60ef-d071-422a-aaf7-1e9749d45168' date '31 May 2011' time '11:23:14 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.141' message 'Introduced a dependency on the Fuel serializer.  You can load it first with...Gofer new        squeaksource: ''Fuel'';        package: ''ConfigurationOfFuel'';        load.((Smalltalk at: #ConfigurationOfFuel) project latestVersion) load: #(Core Tests Benchmarks).It''s smoking fast compared to SmartRefStreams.  A 200 object commit with SmartRefStream on test machine takes around 2.2 seconds, .41 seconds with Fuel.Passes all tests.  SmartRefStream is still the default for now so loading this won''t change anything or corrupt existing databases.  To set fuel as the default serializer evaluate...SDFileStore serializer: SDFuelSerializer new.This will of course invalidate any existing db based on SmartRefStreams.  To migrate, simply resave all of your objects.  This would require grabbing all objects first into some temp arrays, changing the serializer, then calling save on all objects.' id '16b76fac-9ac5-42f0-bcc4-aa5d0829d516' date '31 May 2011' time '10:28 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.140' message 'stupid temporary bugfix for dates missing their offset after serialization' id '94a04eed-d4e1-4a1b-8345-df8356035c9e' date '30 May 2011' time '10:32:34 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.139' message 'Add a few convienent Smalltalk style query aliases.' id '61b42e24-f315-4d3b-891b-5cc08d20cdf3' date '14 May 2011' time '8:14:49 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.138' message 'Load new store on a background thread when installing so UI isn''t locked up while it''s loading.' id '5ddee51c-1042-407f-af84-5f5aeb1cd7b6' date '11 May 2011' time '8:20:13 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.137' message 'Seriously simplified the sliced serialization of the object graph.  Looking back, most of my issues with collections were caused by having an override too high up in the collection heirarchy forcing too many specializations when I only really needed one in ArrayedCollection due to it being a variable sized class.Matrix now serializes correctly using the inherited implementation from Object of the necessary methods.' id 'c46437f9-c644-4afd-b4ae-b577514aa6a7' date '6 May 2011' time '2:46:05 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.136' message 'Removed a touch of commented out code, simplified the critical section to one lock per class instead of one lock per instance, added a conviencene method #install to the class side of the abstract store so simplify installation of alternative stores.' id '6dd4801d-723d-4a42-9723-45e089210d0b' date '6 May 2011' time '8:44:31 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.135' message 'Renamed a method for clarity while refactoring to improve test coverage and removed some dead code.' id '885c394d-68f9-400f-9465-217b4baf5c0c' date '30 April 2011' time '10:14:50 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.134' message 'Added a method to allow for Squeak compatibility.  Dictionary>>addAll: works slightly differently in Pharo.Tests now pass.' id '413bae86-75d4-444e-af9c-6a2d4ba6ac19' date '28 April 2011' time '4:21:47.764 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.133' message 'merge postCopy.' id '3b1f8fdc-8a5b-4d2d-bc02-9d6c28599541' date '27 April 2011' time '7:41:56 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.132' message 'Put the startUp code back in the checkpointer, got lost when playing with SandstoneGoods which overrode it.  Fuck I hate overrides.' id '959d927a-fcf1-4597-b23c-d85e7e910627' date '26 April 2011' time '9:15:05 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.131' message 'Reintroduced the = and hash overrides for use with stores like the goods store that doesn''t keep the whole graph in ram.' id 'f204223b-d1c1-4dfb-9ffc-60bbe9139972' date '24 April 2011' time '11:05:58 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.130' message 'Some more cleanup refactoring of duplicate code between memory and file stores that should be pushed up to cached store.Warning: If you use memory store for anything but testing, I changed the class variable reference from Cache to Instances to more clearly reflect what that dictionary is for.  Loading this code will destroy any data you have stored in SDMemoryStore class>>Cache so you should save that off somewhere if you don''t want to lose your data.' id 'e385db7c-c30d-43ba-920d-6922d9255aae' date '22 April 2011' time '9:30:21 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.129' message 'Beef up concurrent dictionary a bit.Optimize cached store to remove excessive copies.' id '92f28c60-d12a-44b1-945d-6616bf74a226' date '22 April 2011' time '12:43:36 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.128' message 'An object should never change its id.' id '14c94db7-727b-4829-82ac-29df0700d1f5' date '21 April 2011' time '11:55:17 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.127' message 'Refactoring common behavior into superclass for cached stores.Fix lookup by id to not copy all sublcass collections into one large collection before searching.  Better to just search each subclass collection individually.' id 'f02c6592-5023-4990-a171-a0140479d2e2' date '21 April 2011' time '11:53 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.126' message 'Make sure active records can''t hold references to classes or semaphors, the serializer can''t handle it.' id '4f542980-241c-4c09-b198-236784d486b0' date '31 March 2011' time '9:40:31 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.125' message 'Small change to an extention method to make tests pass in Pharo 1.2 because someone''s been messing with SmartRefStreams.' id '9b92874c-f595-4f31-bb8e-7dab6c34daa9' date '15 March 2011' time '3:19:32 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.124' message 'Change background priority so Seaside still runs while database is loading.  Don''t want the site up process thinking site is hung and rebooting constantly because database doesn''t load fast enough.' id '20b669bb-6096-480a-aa4d-ed4b8fd39bc1' date '19 February 2011' time '9:59:43 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.123' message 'Moved tests to their own package.' id 'fa9f4638-bca7-42d5-a7ce-2a468bef8540' date '12 October 2010' time '7:37:46 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.122' message 'Pharo is apparently a bit slower than squeak when serializing data, something to do with the changes to Dictionary.  Added some load time to some tests to get them passing, just have to accept slightly slower commits.' id '4045455e-2490-4c2e-8030-2cbdc8ad395a' date '21 September 2010' time '10:02:01 am' author 'RamonLeon' ancestors ((name 'SandstoneDb-RamonLeon.121' message 'Moved Squeak only extentions into SandstoneDbSqueakPharo no long has class Complex' id '382cfa0d-571e-dc4c-9069-e6da29203ab2' date '17 September 2010' time '2:38:06 pm' author 'RamonLeon' ancestors ((name 'SandstoneDb-rjl.120' message 'replace TimeStamp now with DateAndTime now' id '9b66168d-6167-a14e-a943-b18f41386fcf' date '26 April 2010' time '3:26:10 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.119' message 'Dictionary keys can now be active records as well, test to support and modified existing test to check this as well.Killed #= and #hash in ActiveRecord, not sure why I had them there, but they were covering up a bug in Bag serialization related to Dictionaries.  Possibly left over from when system was disk based with proxies rather than prevayler style.Moved a few methods from Object into ActiveRecord to reduce their scope.  Moved some defaults around as well and changed so defaultX return an instance not a class for consistency.All tests pass.' id '6272bf97-52ba-6940-b55a-8df66b84fd4d' date '31 October 2009' time '6:06:02 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.118' message 'Removed dependency on sUnit improved selectors that aren''t in Pharo.' id 'eaf819b1-70af-5543-889a-4cbed5a1ce44' date '18 August 2009' time '2:14:28 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.117' message 'A couple of small refactorings to make playing with alternate Hashes easier and to clean up a few small things.A couple new unit tests.Nothing big, no functional changes.' id '0f0e7a96-9a90-684c-8034-7194acbf14fa' date '14 July 2009' time '10:57:50 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.116' message 'last changed introduced a bug by having findAll: return a dictionary rather than an Array.  Test added to prevent this from happening again.' id '8e235a28-d313-4cfb-a701-33ccfb28ee16' date '13 June 2009' time '11:57:15 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.115' message 'Bug fixed in dictionary serialization, seems I hadn''t accounted for storing the same value under multiple keys.  Loop with keysAndValuesDo: rather than querying for the #keyForValue:Thanks to Nicolas Petton for the test case exposing this.All tests pass.' id 'af000c72-43dc-48c5-be3e-cad151066871' date '23 May 2009' time '6:05:42 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.114' message 'Fixed a bug in the checkpointer where it''d reset the store on startup to a filestore even when another store was configured.' id 'c66057a8-5d62-4a86-b20f-b4a604323618' date '17 January 2009' time '2:48:38 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.113' message 'Moved some methods from set to collection that don''t assume ordering and moved the ones from collection that did assume ordering to sequenceable collection to optimize the collection versions.  Can''t use withIndexDo in collection, this was a bug.Added a couple of overrides to allow Bags to serialize and deserialize properly, contributed by Benoit Astruc.Added a test for Bag serialization.All tests pass.' id 'cb7ff472-1f30-4657-a71e-16198160c4f9' date '13 December 2008' time '10:49:18 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.112' message 'fixed a small bug in indexString, guess I hadn''t used it' id '85719d2d-1bf4-4833-a9b6-f9289e9f31c9' date '6 December 2008' time '12:42:46 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.111' message 'Added a few small extra delegations through concurrent dictionary.' id '9560b4a3-dc1b-49a1-9b15-186af5d81420' date '30 November 2008' time '1:16:40 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.110' message 'Change the startUp routine to ensure that a start from scratch always loads all data from disk dumping any data that might be in the image from a save while running.' id '6622f44a-509d-4612-9544-5c5ecf3cc777' date '19 November 2008' time '10:24:56 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.109' message 'Deleting multiple times shouldn''t cause an error, it''s just too inconvienient.' id 'a2006cbe-0d46-48aa-96d2-a9b78861d5be' date '15 November 2008' time '4:58:04 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.108' message 'fix initials' id '3cc1b82a-1968-e047-a477-7c89216431cb' date '18 September 2008' time '11:31:04 am' author 'rjl' ancestors ((name 'SandstoneDb-test.107' message 'dirForClass: aClass bug fix contributed by Ken Treis, the dir''s are properly nested for deep hierarchies now, seems the existing code only worked one level deep.  Test added, tests pass.' id '88f42b0a-dcab-b443-bdff-5149cc706b50' date '18 September 2008' time '11:24:28 am' author 'test' ancestors ((name 'SandstoneDb-rjl.106' message 'Cleaned out some unused experimental code and killed the snapshotting service which wasn''t used anyway.  This removes the dependency on OSProcess as well.' id 'bfd8d78a-81c7-4a6b-aa42-a248676f0e9c' date '14 September 2008' time '8:56:52 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.105' message 'Cleaned out some unused experimental code and killed the snapshotting service which wasn''t used anyway.  This removes the dependency on OSProcess as well.' id '98da2f51-991d-45e0-963e-5bf18162f93e' date '14 September 2008' time '8:53:04 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.104' message 'fix initialize on stores to prevent nil cache.' id 'fdc319a7-4294-49e6-a0b4-19ca42b9cca6' date '31 August 2008' time '9:34:39 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.103' message 'Ah, bug in the startUp: routine wasn''t ensureForClass: before loading, caused db to only partially load.  Don''t use the previous version.' id 'a5e80247-83fc-4647-a039-9bdd3b5a6d3c' date '28 August 2008' time '4:55:31 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.102' message '***WARNING, BIG CHANGES TO CORE, CAUTION REQUIRED***The default base directory for the database was change to YourImageName.SandstondDb in the same directory as the image, you can create this directory manually and just moved all your existing database directories into it.  This keeps the image directory clean in development when you may be running multiple images from the same directory and allows each image to keep it''s own databases.Moved the startup process, loading of records, and background snapshotting code into SDCheckPointer, slimmed down the active record class side just a bit.Only reload and attempt recovery on actual image startup, not just snapshotting, so saving the image does not force a reload or create directories or anything.  After creating a new subclass of SDActiveRecord, you''ll need to restart your image to enable persistence for that class.  When an image starts up, only records newer than the image or missing from the image are loaded allowing a saved image to act as a snapshot of the db.  Doing some work on automatic background stapshotting but it''s disabled at the moment until I have more time to work on it.Reclassified a bunch of methods.Found a bug in crash recorvery, fixed it and added tests to support crash recovery.Removed extention from file directory that''s no longer used.Extracted file operations into a seperate class heirarchy to make ActiveRecord pluggable.Extracted tests into class heirarchy and created a memory store to prove concept of pluggable ActiveRecord.Working on an add on package for using OmniBase as one of the pluggable stores, possibly try one for SqlLite as well.Migrated object cache into the store, not all stores want or need caching. Changed priority of FileStore loader, it has to be higher than Seaside so that by the time a request is served the pages in databases are already loaded.Fix to ensure new records are initialized lazily.' id 'ef0b28a1-e217-0144-8dc0-babca6f87b81' date '27 August 2008' time '10:35:39 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.101' message 'moved the proxy into omnibase store package' id '6e5009da-017d-fe4d-8a42-34f973ca9581' date '27 August 2008' time '10:26:46 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.100' message 'initialize default store on startup if nilremove use of private extention' id '093a1736-dd3c-1d40-b623-20ba39ad1d71' date '27 August 2008' time '9:25:27 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.99' message 'fixed #find:ifPresent:' id '5fb43d7c-23e2-48ab-aa92-d627e040f28e' date '26 August 2008' time '11:36:16 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.98' message 'Moved some tests into OmniBase extention package, killed expermental transactional store code.' id 'ebc1ab38-415d-4c4c-8631-1aaad374f87c' date '25 August 2008' time '10:08:25 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.97' message 'changed priority of FileStore loader, it has to be higher than Seaside so that by the time a request is served the pages in CMS are already loaded.' id '3bd190b6-bfcb-443d-8011-b352ac657f23' date '25 August 2008' time '9:50:05 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.96' message 'moved OmniBase stuff into it''s own package' id '70f7b055-84bc-4cc7-9b7e-46eb8a7f07d7' date '21 August 2008' time '7:42:44 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.95' message 'unfinished indexing work on OmniBaseStore' id 'bbed0e5f-3e1b-490e-8fcf-d91e2351c294' date '21 August 2008' time '7:17:34 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.94' message 'Lot''s of refactoring to move more stuff into the store so OmniBase works well.  Seem to have everything working including an OmniBase pool and Seaside session for it with an ActiveRecord commit wrapped around the entire request.Though findAll etc work, they are horribly slow due to paging through the entire db on disk.  Next comes trying to hide some indexing behind the queries without having to change the API... possible, maybe.Thing to remember about OmniBase is that all work must be done inside transactions, ALL.  Object cannot be share between transactions so any save requires reloading old version from db and replaying changes from last object.  Whent a transactions commits any untouched objects there were proxies become invalid proxies, so an ref you intend on holding onto needs to resolve the proxy with realObject, this is hidden in the fineX methods.' id 'e3e6ee6c-d859-48de-baa7-a124ca29030b' date '15 August 2008' time '2:09:19 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.93' message 'small fix if db is somehow null' id 'd43c86a9-a530-4e24-bfcb-af8a540fd372' date '14 August 2008' time '7:41:09 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.92' message 'Migrated object cache into the store, not all stores want or need caching.  All tests passing including OmniBase store.' id '7cf4fe54-3238-404b-ad42-363613839309' date '14 August 2008' time '5:07:26 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.91' message 'implemented an omnibase store, passing tests.' id 'a985c234-a92b-b748-9960-5d3ce7f77ebc' date '14 August 2008' time '2:39:35 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.90' message 'fixed writing of object index' id '365b27e1-61da-4649-8c27-e98e308540ea' date '13 August 2008' time '10:25:21 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.89' message 'First cut of transactional file store that passes all existing unit tests.' id '628633a7-0782-46b7-adfb-f1305f98af2f' date '12 August 2008' time '11:27:43 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.88' message 'Merge of code from home.' id '02ca313e-aac2-4ec6-87b3-22cd49531ebc' date '12 August 2008' time '6:51:38 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.86' message 'experimental, transaction store stuff.' id '30119be1-51ab-4d0c-87e4-ffa6bc60b02e' date '12 August 2008' time '8:18:24 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.85' message 'extracted tests into class heirarchy and created a memory store to prove concept' id '5c0098d3-e324-4a47-9f57-9305dfc5aa62' date '10 August 2008' time '7:21:58 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.84' message 'Extracted file operations into a seperate class heirarchy to make ActiveRecord pluggable.' id 'f8570704-c324-4462-86d7-96dd4f74c832' date '10 August 2008' time '2:01:14 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.83' message 'disable snapshotting until I can make it work well' id '8faa043f-e3e8-46f7-aef9-718b7681ed89' date '9 August 2008' time '2:18:20 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.82' message 'Added background snapshotting with OSProcess, needs more testing.' id '001eaa36-deab-40c9-8fcd-7c6fefcf2552' date '6 August 2008' time '12:52:36 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.81' message '***WARNING, BIG CHANGES, CAUTION REQUIRED***The default base directory for the database was change to YourImageName.SandstondDb in the same directory as the image, you can create this directory manually and just moved all your existing database directories into it.  This keeps the image directory clean in development when you may be running multiple images from the same directory and allows each image to keep it''s own databases.I''m now using image as the main db file, saving images is very very fast, much faster than exporting all records to a single external file under any mechanism I could find.  SandstoneDb  now basically acts as a transaction log for the image.  A full object graph rebuild now only happens when a new image is pushed out that doesn''t contain the existing data.  Introduced automatic image snapshotting process based on the number of records newer than the image.  This all but eliminates load time and makes the image only have to recover newer records on startup based on the timestamp of the image and the object files.  A full load of a large test dataset that takes 56 minutes to fully load from disk, only takes 55 seconds load once the image has been snapshotted.  After a snapshot, the load process need only check each records file on disk for its timestamp and compare it to the image timestamp without actually opening or loading each record.  If a record is found that doesn''t exist in the image, or has a newer timestamp than the image, it is either loaded or aborted respectively bringing the current image up to date.Moved the startup process, loading of records, and background snapshotting code into SDCheckPointer, slimmed down the active record class side just a bit.Only reload attempt recovery on actual image startup, not just snapshotting, so saving the image does not force a reload or create directories or anything.  After creating a new subclass of SDActiveRecord, you''ll need to restart your image to enable persistence for that class.Reclassified a bunch of methods.Found a bug in crash recorvery, fixed it and added tests to support crash recovery.Removed extention from file directory that''s no longer used.Initially every 10 minutes sandstone checks if a snapshot needs to be taken, if more than 500 records are found that are newer than the image, the image is saved.' id '8b379e71-4c22-344a-aaf0-ba3a92d461b3' date '5 August 2008' time '11:44:13 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.80' message 'fix to ensure new records are initialized lazily' id 'c06425c5-9bc9-5d4f-962d-d6cfc156b82e' date '4 August 2008' time '1:58:41 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.79' message 'Introduce automatic image snapshotting process based on the number of records newer than the image.  This all but eliminates load time and makes the image only have to recover newer records on startup based on the timestamp of the image and the object files.Initiallize ever 10 minutes it checks if a snapshot needs to be taken.' id '8e5c59ff-b567-44af-8d53-0fe50e97381a' date '3 August 2008' time '1:45:11 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.78' message 'reclassified a bunch of methodsadded tests to support crash recovery, found a bug and fixed itremoved extention from file directory that''s no longer used' id '33cedabd-0110-4e40-8d6a-d2c5005c0457' date '3 August 2008' time '10:38:11 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.77' message 'Only reload on actual image startup, not just snapshotting.' id '61659821-1e60-42c3-8ffa-505e55ab9c7c' date '3 August 2008' time '1:49:41 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.76' message 'Second cut of using image as the main db file.  Working well, load time improved 60% with file directory changes, and load time virtually eliminated by keeping data in the image and only loading files newer than what''s in the image, or that are missing from the image.  SandstoneDb is now basically a transaction log for the image.' id '2f096b3e-85be-4ed8-bcbc-6c9f443931f2' date '3 August 2008' time '1:38:27 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.75' message 'first cut of using the image as a db to avoid load issues.' id 'ccd3e8f9-9867-4a37-b87a-0a8f0bd995d8' date '2 August 2008' time '10:56:27 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.74' message 'Ah, missed a call to delete, old junk is really gone now!' id '1c57996d-2860-8c49-a39f-9ac9f7a37688' date '31 July 2008' time '5:47:58 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.73' message 'Removed some redundant comments.Added some necessary ones.Changed the save routine slightly...	No longer keep around an old version of the objects or stamp them with version numbers.	Before writing new version, issue a delete in case any previously failed commit left junk data around.	After upgrading to this version, issue the following command from a Linux or Cygwin (for Windows dudes) command line to your db directories if you want to clean up the old version junk...	find . -type f | grep ".*\.[0-9]*$" | xargs rm	If you can''t issue this command, your computer is already broken beyond repair, it lacks a real command line!Changed a few (select:)do: into select:thenDo:, formats better and no parens needed.All tests passing.	' id '71577184-cf90-eb42-ae53-317e7ee5bbf9' date '31 July 2008' time '5:42:02 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.72' message 'added a comment and a test for the version number' id '136c7915-452d-4997-a2fd-234b10877ef8' date '14 July 2008' time '11:28:29 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.71' message 'deleted some dead code leftover from previous attempt at a custom deep copy' id '41480030-8bdd-e346-b737-2153d89840fd' date '10 July 2008' time '9:45:29 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.70' message 'Some serious performance improvements for saving and loading of object with large collections or large numbers of children.String needed to be marked as derservesSandstoneReference false, it was scanning each Char of the String to see if any of them were active records because String subclasses collection.Also removed a linear scan and replaced it with direct indexed access for replacing markers and references, also caused huge problem with larg collections.Replaced a few Dictionaries and Sets with IdentityDictionaries for the graph traversal, much faster.All tests passing.' id '520a897f-2a04-44a3-b083-c02f5c52e1a5' date '8 July 2008' time '9:02:23 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.69' message 'broken version, exploring perf fixes' id '5eb23c9b-757c-c54e-a0d0-9cb18e5d4c8c' date '8 July 2008' time '7:01:28 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.68' message 'replace a semaphor with a monitor so I don''t get deadlocked in reentrant code.' id '5042ef56-534d-41c0-a81b-8e9d1dbb2b68' date '7 July 2008' time '11:20:36 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.67' message 'Performance tweaks to #warmUp including inlining all introspectors, about a 30% bump in load time from not creating a bunch of short lived objects and removing a few extra layers of indirection.All tests passing.' id '91a60758-ace1-ad4a-a44e-cd3c30449d54' date '20 May 2008' time '6:46:56 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.66' message 'fixed some method category names' id '0318f3b4-2e6f-4648-be92-a4d2f3e38291' date '20 May 2008' time '9:43:39 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.65' message 'performance tweaks to warm up including inlining all introspectors' id '03cc6f2f-f79c-4f4e-bd80-0e14dc88a427' date '20 May 2008' time '9:34:39 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.64' message 'performance tweaks to warm up time, losing the introspector' id '6086b3a9-10be-4c5c-9543-8c1530e1369e' date '20 May 2008' time '7:54:41 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.63' message 'broken attempt to inline introspectors for speed reasons' id 'c2c558fd-1ea5-47b0-9bee-c19fbb6f1aa2' date '19 May 2008' time '8:48:20 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.62' message 'A unit test supporting that last fix to the reference marker not crawling into active records.A couple of explicit ^self added to #save, #commit:, and #commit: for clarity.All tests passing.' id '77630d73-b8e6-4068-869e-bc23714fe872' date '14 May 2008' time '12:05:25 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.61' message 'Fixed a bug in the references marker that was letting it crawl into and mark references on active records when it''s supposed to replace them with markers and only crawl into non active records.This wasn''t noticable before because of the deepCopy serializing the whole graph and then marking it.  The new sandstoneDeepCopy that replaced it exposed the bug in the marker crawling the whole graph rather than just the slice it was sopposed to.All tests pass and save are super fast again.' id 'e30bb166-3712-774c-977c-8b6c182d19a1' date '13 May 2008' time '6:23:57 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.60' message 'Implemented a deepCopy introspector to replace deepClone which was becoming a performance problem on more complex models.  The deep copier slices out just enough of the graph to get the job done rather than serializing large chunks of the graph that won''t be saved anyway.  When sandstoneDeepCopy hits another active record the deepCopy stops since it''ll be replaced by a marker anyway.  Saves are nice and fast now for objects complex enough to have shown the performance problem.All tests passing.' id 'fb1cdf1e-8435-43da-a8c4-fb8e1a73e2a0' date '12 May 2008' time '11:34:45 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.59' message 'Startup should load all objects on one thread to avoid deadlocks on cache.Make sure to delete any existing old version that might be hanging around after a crashed process.' id 'ae542949-06fc-0144-a712-d55b2741581a' date '12 May 2008' time '6:09:40 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.58' message '#delete wasn''t deleting old versions, added test and fix, old versions now deleted.All tests passing.' id '87ad1854-f399-4e4e-a1b6-d6ff56ac6655' date '12 May 2008' time '9:37:39 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.57' message 'Fixed a bug in asOriginalObject where objects that used to be ActiveRecords but aren''t anymore resolve previously serialized markers as nil rather than blowing up with a #doesNotUnderstand.Removed extensions to the FFI so SandstoneDb loads without errors on a fresh 3.9 image.  I trust the SmartRefStream class will throw an appropriate error if someone tries to save some kind of object it can''t handle.Update #createdOn on first commit.Created a concurrent wrapper for cache and lock dictionaries and protect them with a Monitor instead of a Semaphore so the cache is safe from deadlocks caused by reentrant modifications from the same process.Got rid of the single lock in ActiveRecord, the cache and locks dictionaries are now thread safe.  Previously the cache wasn''t.Removed isolatedVersion and optimistic concurrency, it''s not compatible with current recovery process since each version would need to commit to a random temp file name instead of .new.  Until I''m ready to revisit that, unlikely for now, I''m taking the feature out.  To be thread safe, all modifications to ActiveRecords should use #commit, #commit:, or #critical: with an embedded #save.All tests pass.' id '145564c5-a055-42dc-8b29-319ad4b013d5' date '10 May 2008' time '5:02:17 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.56' message 'Fixed a bug in asOriginalObject where objects that used to be ActiveRecords but aren''t anymore resolve previously serialized markers as nil rather than blowing up with a #doesNotUnderstand.Removed extensions to the FFI so SandstoneDb loads without errors on a fresh 3.9 image.  I trust the SmartRefStream class will throw an appropriate error if someone tries to save some kind of object it can''t handle.Created a concurrent wrapper for cache and lock dictionaries and protect them with a Monitor instead of a Semaphore so the cache is safe from deadlocks caused by reentrant modifications from the same process.Got rid of the single lock in ActiveRecord, the cache and locks dictionaries are now thread safe.  Previously the cache wasn''t.Removed isolatedVersion and optimistic concurrency, it''s not compatible with current recovery process since each version would need to commit to a random temp file name instead of .new.  Until I''m ready to revisit that, unlikely for now, I''m taking the feature out.  To be thread safe, all modifications to ActiveRecords should use #commit, #commit:, or #critical: with an embedded #save.All tests pass.' id '9b6018a3-1723-4142-b3d1-9d0f75cc9f85' date '10 May 2008' time '4:54:24 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.55' message 'Removed isolatedVersion, it''s not compatible with recovery since each version would need to commit to a random temp file name instead of .newFound out under load that it doesn''t work because of the file name class, should have thought of that.' id '9dea75f7-c804-46b2-91c2-9c8f95e66de8' date '10 May 2008' time '12:26:18 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.54' message 'Created a concurrent wrapper for cache and lock dictionariesGot rid of lock in ActiveRecord, using a monitor for critical sections so ActiveRecord can support reentrant modifications of the cache at load time.' id '6002902b-2746-42cd-a233-dd06dc66fe19' date '9 May 2008' time '9:46:08 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.53' message 'removed extentions to the FFI so SandstoneDb loads without errors on a fresh 3.9 image.Wrap all modifications to the global object cache in a critical section, needs to handle concurrent updates.Update createdOn on first commit.' id '4aef3690-4d53-4340-8eae-6e1f04f5a083' date '9 May 2008' time '5:38:45 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.52' message 'Removed a transcript show' id '6eee84cb-e100-0249-8322-d1f69fefb22d' date '8 May 2008' time '8:25:17 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.51' message 'Fixed a bug in asOriginalObject where objects that used to be active records but aren''t anymore resolve their markers as nil rather than blowing up.' id 'a2948eea-0b4b-874f-8455-54f904c5571d' date '6 May 2008' time '6:51:44 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.50' message 'Fixed a small bug where #atId wasn''t returning subclass instances, added supporting test.All tests passing.' id '40e360fb-923a-7a43-a7ee-c24c2971e551' date '30 April 2008' time '9:36:03 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.49' message 'Reworked the startUp sequence and removed the need to install active records.  A simple save of the image will install any needed records and more importantly loading code into a headless server and then restarting the service auto installs any new records without the need for you to have to remember it.Added an event lifecycle to records so you can override and hook them for business logic.  onBeforeX and onAfterX methods for saving, deleting, first time saving, etc.All tests passing.' id '1fcdb6b8-8bc2-4212-b54f-bc1b7473bb33' date '29 April 2008' time '9:45:42 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.48' message 'Reworked the startUp sequence and removed the need to install active records.  A simple save of the image will install any needed records.Added an event lifecycle to records so you can override and hook them.' id 'eb38ec7a-483f-4432-9c46-4760d0363b15' date '27 April 2008' time '3:00:43 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.47' message 'Added abortChanges and isolationVersion editing and supporting testsAdded optimistic concurrency and supporting test using above featuresAdded new concurrency exception using when committing an isolationVersionRenamed findById to atId, it''s more Smalltalk''ishMerged in a fix from Sebastion, #copy on iterating a collection' id '9e3bb39e-a63b-6f45-b01e-a969213c7226' date '25 April 2008' time '2:53:32 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.46' message 'merged in a fix from sebastion, #copy on iterating acollection' id '167989b9-f618-6c41-88c5-ba9446edfe9f' date '23 April 2008' time '5:00:21 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.45' message 'renamed findById to atIdadded optimistic concurrency and supporting testadded new concurrency exceptionmessed with some comments' id '0b79446c-6648-5f42-a198-5c0b5d1b59f3' date '22 April 2008' time '11:03:23 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.44' message 'added abortChanges and isolationVersion editing and supporting testsalso playing with test database class' id 'e27b4d5f-407b-5c46-801f-543220d127c4' date '21 April 2008' time '6:42:39 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.43' message 'Couple of lint style fixes and added #commit as shortcut for a critical save.' id '01063077-9158-fa4a-9815-86186f5de473' date '16 April 2008' time '3:36:48 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.42' message 'Fixed a bug where an ActiveRecord wrapped by a proxy (such as SoapProxy) failed to be = to itself.  Nothing you''d normally do, but ActiveRecord equality should work regardless.' id '444b4737-738b-3a47-9aa1-0b30df40163b' date '11 April 2008' time '11:42:40 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.41' message 'Same technique that solved reference marking is now used for reference resolving as well, from Sandstone.*WARNING* I adopted directory name fix and unit test from Sandstone for hashing obj file locations, this fix changes the hashing for directories and thus where files are located.  After loading it, you should rename your existing db directories, call SDActiveRecord install to recreate new directories, and then save all of your records via YourClass do: [:e | e save] for each of your classes to ensure your data is safe should your image crash or be shut down.  After loading this version, you will not be able to load from previous versions directories.  Hopefully, this will be the last time the fileformat or directory structure changes.Did a bit of refactoring to get all the class names and method names from the reference marker and resolver symmetrical and simplified, while removing unused levels of indirection to reduce the number of extention methods. Most of them are prefixed with #sandstone to reduce potential conflicts with other packages.Also categorized most of the extention methods a bit better.Removed a bunch of dead code from the old method of reference marking and resolving. Code is now clean.All tests passing.' id '248ce7af-29e3-4479-b99d-fc7a2257697d' date '10 April 2008' time '10:18:59 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.40' message 'Same technique that solved reference marking is now used for reference resolving as well, from Sandstone.Adopted directory name fix and unit test from Sandstone for hashing obj file locations.Did a bit of refactoring to get all the class names and method names from the reference marker and resolver symmetrical and simplified, while removing unused levels of indirection to reduce the number of extention methods.  Most of them are prefixed with #sandstone to reduce potential conflicts with other packages.  Also categorized most of the extention methods a bit better.Removed a bunch of dead code from the old method of reference marking and resolving.  Code is now clean.All tests passing.' id '02393049-c08c-41e9-aef1-1da8fa35c139' date '10 April 2008' time '10:02:05 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.39' message 'don''t load, mid working' id '5b00a795-a5d6-f444-a43a-fd9a667c54bb' date '10 April 2008' time '7:23:32 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.38' message 'Wholesale adoption of the reference marking visitor from the Sandstone add on package.  After closer inspection I realized the original ref marker was purely recursive and assumed a tree of objects rather than a graph.  This visitor traverses the graph correctly by not revisiting visited nodes.Also renamed clearCache to coolDown and loadAll to warmUp, they''re better selectors when one considers multiple instances of the same db in one image.  Only databases with active sessions need be loaded into ram.All tests pass.' id '2f301933-d6c7-4ab2-84e1-4b6541d3bfa5' date '10 April 2008' time '12:21:11 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.37' message 'Added a commit exception when attempting to save a record that references another unsaved record.Until I have time to implement a full topological sort with circular reference detection to allow a safe deep save, it is the programmers responsibility to save multiple records in the correct order, and any attempt to not do so will result in a commit exception.Getting a commit exception is a far better alternative than going into an infiniate loop because of an undetected cycle in the object graph.Unit tests updated to fake the save when testing reference marking.' id '1ea89ce9-17bc-4930-9c0f-63e62e688d9c' date '9 April 2008' time '8:31:18 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.36' message 'Fixed deep reference marking and restoring, had the fix already but put them in the wrong override in Collection.  Added two more tests from Sebastian, renamed two methods and all is good, tests are green!' id 'bebe94bd-9e9a-4efd-8ef6-714ab5750041' date '9 April 2008' time '7:08:26 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.35' message 'two new failing tests from Sebastian' id 'f07bbf58-be24-1c49-bdb8-b92539e5c8c4' date '9 April 2008' time '5:24:49 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.34' message 'don''t delete the backup copy until after a successful save' id '8b2402bc-9872-5e4a-b150-91e5360ea22d' date '7 April 2008' time '5:46:44 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.33' message 'added crash recovery, partial commits are now either finished on load, or deleted as failed.' id '21805dbf-e791-d040-ac00-19b622882b72' date '2 April 2008' time '3:10:43 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.32' message 'fixed a bad comment' id 'a26e83cb-a3b5-2348-8a61-78a6d6280f5f' date '1 April 2008' time '12:37:03 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.31' message 'added some comments' id '17ed038d-c9b4-7840-ba6e-c06b327ab342' date '1 April 2008' time '12:27:07 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.30' message 'replaced contract and ourCr for publishing with no package dependencies' id 'e5699300-eb92-e84c-ab8b-bfae458242e5' date '1 April 2008' time '12:16:18 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.29' message 'moved some extentions to from sentorsa' id 'efa3dd57-810c-6248-98d8-bdeddce5747a' date '1 April 2008' time '12:05:30 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.28' message 'moved my datastream extentions from another package' id '13a055a0-1051-fa4b-977b-ab4867a2699b' date '1 April 2008' time '11:57:55 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.27' message 'added some polymorphism to get rid of an ugly case statement' id 'f7e55c6d-442b-a341-9eb9-56a56497bfdb' date '1 April 2008' time '11:54:35 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.26' message 'cleaning up for sharing' id 'b85a120e-b691-8e4f-99d3-8e4ae7264b14' date '1 April 2008' time '10:14:21 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.25' message 'removed UI progress bar from save' id '8031cd54-f607-4d7e-81ab-5912c9c9515c' date '31 March 2008' time '10:56:53 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.24' message 'added test to support bugfix where objects within collections with nested references don''t get market properly' id '098ce671-3112-41e7-bda5-bcc701d35e1d' date '31 March 2008' time '8:56:37 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.23' message 'fix nextAndClose so it doesn''t prompt user in UI' id 'aa617174-c69d-3e44-b993-f78c11c5831e' date '31 March 2008' time '6:20:29 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.22' message 'fix bug in collections not recursing properly resulting in larg obj files' id '3153956e-2cb0-0043-8388-500b9b5d51b6' date '31 March 2008' time '6:11:30 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.21' message 'removing dead code, merged activerecord and memoryrecord, can''t see using one without the other anymore.' id '8e3c2e76-4010-a74f-bcda-da38c4cd5915' date '31 March 2008' time '2:32:21 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.20' message 'Found a faster way of using SmartRefStreams that only saves data in the files and avoids fileIn, now fast enought to actually use.' id 'dfb40c69-6766-423a-9731-34d487240592' date '30 March 2008' time '11:19:21 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.19' message 'Now successfully using smart reference stream, it can handle code changes and deserialization of old data without mistakes or indexing errors.All tests passing.' id '038be3a3-a0ee-4692-92c1-bf9df5868ba1' date '29 March 2008' time '10:14:40 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.18' message 'http://www.fit.vutbr.cz/study/courses/OMP/public/software/sqcdrom2/Squeak_Swiki/512.htmlexperimental, trying to use SmartRefStream' id '243aa3ee-ba95-6542-b2e5-3b3c21a55bf3' date '28 March 2008' time '5:51:44 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.17' message 'implemented object level locks for app api' id '9c6c1643-01be-7442-bf47-3e4c44f8de94' date '27 March 2008' time '1:43:18 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.16' message 'fixed a broken test, all tests passing' id 'a270c570-d1ad-da49-8397-4d5e3540b111' date '26 March 2008' time '8:04:08 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.15' message 'fixed cached load to return nil on a load error' id '9fa23814-a726-9a47-86dc-3803ac7e80f4' date '25 March 2008' time '10:01:14 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.14' message 'cache objects before resolving their proxies' id 'f1481f94-543a-5b4d-a074-6b6f0e6da311' date '24 March 2008' time '7:34:41 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.13' message 'fixed a bug where record copy was saved wrong, added supporting test' id '5b56a9b1-30ab-6d4f-8285-50b6071cd480' date '24 March 2008' time '7:01:45 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.12' message 'added a test for peer identityidentified a possible infiniate loop for cyclic references' id 'e9da4440-df0b-4a39-a72e-826060e2577b' date '19 March 2008' time '12:04:11 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.11' message 'DO NOT USE IN PRODUCTIONalmost have recursive resolution workingrecursive mark works, recursive restore doesn''t' id '508d57bd-cc34-ef47-9258-2ea35173157d' date '10 March 2008' time '10:27:49 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.10' message 'loadAll wasn''t working correctly, updated unit tests to force flush and loadAll to ensure real testing.  Updated how marker loads to allow cycles and loading of future referenced objects.' id '141d7f99-5b31-7c41-8565-af6a248ea7d7' date '10 March 2008' time '9:35:17 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.9' message 'renamed some methods to be more Smalltalk''ish and found a serious bug in the serialization, fixed it and added two more unit tests to ensure marking and resolving references works correctly' id '871b0fa5-35a1-1a45-b296-397163367ca9' date '8 March 2008' time '9:21:45 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.8' message 'removed some dupe code' id '002f04f6-0771-498f-86bc-16682a1f7fae' date '14 February 2008' time '12:20:32 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.7' message 'enabling persistence also creates directories' id 'b3e9fa6f-72cc-4ff0-a6a0-f3ec7043b953' date '7 February 2008' time '12:12:27 am' author 'rjl' ancestors ((name 'SandstoneDb-rjl.6' message 'make sure active record itself never tries to load' id '211d84f6-bbce-2c47-8806-f3f3cbdfddd2' date '5 February 2008' time '11:08:12 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.5' message 'some work on the startup routine' id '05ad1978-6527-9848-96e9-38f17332b6cc' date '5 February 2008' time '7:00:38 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.4' message 'load database on system background priority so that seaside remains responsive while loading.' id 'b5b1d05e-df7d-cd42-a71b-ff026faa0d83' date '4 February 2008' time '11:27:44 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.3' message 'Now that everything runs out of ram, no need for proxies to prevent loads, we want loads.' id '4311729a-b784-1842-a250-02948142ed0c' date '4 February 2008' time '9:17:03 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.2' message 'fixed delete, removes object from cache now' id '485f3ff6-a620-b248-be8c-522a1a90e744' date '4 February 2008' time '4:42:38 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.1' message 're-evaluated the sentorsa db designnew design keeps everything in ramsearches are in ramsave to disk in individual filesdb is loaded into ram on image startup on background threadvery fucking fastcan hold a quarter million object in 170 megs ram, who needs disk at all.' id '1d70af33-4d82-441c-83a7-75f0f457f35f' date '3 February 2008' time '11:46:37 pm' author 'rjl' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'SandstoneDb-rjl.87' message 'fixed small bug in SDCheckpointer' id '90f20e3c-d36a-9340-b69d-ec8ee97395c4' date '12 August 2008' time '6:02:37 pm' author 'rjl' ancestors ((name 'SandstoneDb-rjl.86' message 'recategorized a few things and merged in work from the new transaction file store, still in progress and does not pass tests.' id 'f71e9a22-4c11-2148-9471-769407cac9a7' date '12 August 2008' time '11:11:07 am' author 'rjl' ancestors ((id '5c0098d3-e324-4a47-9f57-9305dfc5aa62')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'SandstoneDb-NicolasPetton.132' message 'Added SDActiveRecord >> postCopy' id '08000000-1508-620a-1508-620a14000000' date '27 April 2011' time '12:19:37 pm' author 'NicolasPetton' ancestors ((id 'f204223b-d1c1-4dfb-9ffc-60bbe9139972')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())